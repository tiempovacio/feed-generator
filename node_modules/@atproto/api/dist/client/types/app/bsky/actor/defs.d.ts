import { ValidationResult } from '@atproto/lexicon';
import * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs';
import * as AppBskyGraphDefs from '../graph/defs';
export interface ProfileViewBasic {
    did: string;
    handle: string;
    displayName?: string;
    avatar?: string;
    viewer?: ViewerState;
    labels?: ComAtprotoLabelDefs.Label[];
    [k: string]: unknown;
}
export declare function isProfileViewBasic(v: unknown): v is ProfileViewBasic;
export declare function validateProfileViewBasic(v: unknown): ValidationResult;
export interface ProfileView {
    did: string;
    handle: string;
    displayName?: string;
    description?: string;
    avatar?: string;
    indexedAt?: string;
    viewer?: ViewerState;
    labels?: ComAtprotoLabelDefs.Label[];
    [k: string]: unknown;
}
export declare function isProfileView(v: unknown): v is ProfileView;
export declare function validateProfileView(v: unknown): ValidationResult;
export interface ProfileViewDetailed {
    did: string;
    handle: string;
    displayName?: string;
    description?: string;
    avatar?: string;
    banner?: string;
    followersCount?: number;
    followsCount?: number;
    postsCount?: number;
    indexedAt?: string;
    viewer?: ViewerState;
    labels?: ComAtprotoLabelDefs.Label[];
    [k: string]: unknown;
}
export declare function isProfileViewDetailed(v: unknown): v is ProfileViewDetailed;
export declare function validateProfileViewDetailed(v: unknown): ValidationResult;
export interface ViewerState {
    muted?: boolean;
    mutedByList?: AppBskyGraphDefs.ListViewBasic;
    blockedBy?: boolean;
    blocking?: string;
    blockingByList?: AppBskyGraphDefs.ListViewBasic;
    following?: string;
    followedBy?: string;
    [k: string]: unknown;
}
export declare function isViewerState(v: unknown): v is ViewerState;
export declare function validateViewerState(v: unknown): ValidationResult;
export declare type Preferences = (AdultContentPref | ContentLabelPref | SavedFeedsPref | PersonalDetailsPref | FeedViewPref | ThreadViewPref | {
    $type: string;
    [k: string]: unknown;
})[];
export interface AdultContentPref {
    enabled: boolean;
    [k: string]: unknown;
}
export declare function isAdultContentPref(v: unknown): v is AdultContentPref;
export declare function validateAdultContentPref(v: unknown): ValidationResult;
export interface ContentLabelPref {
    label: string;
    visibility: 'show' | 'warn' | 'hide' | (string & {});
    [k: string]: unknown;
}
export declare function isContentLabelPref(v: unknown): v is ContentLabelPref;
export declare function validateContentLabelPref(v: unknown): ValidationResult;
export interface SavedFeedsPref {
    pinned: string[];
    saved: string[];
    [k: string]: unknown;
}
export declare function isSavedFeedsPref(v: unknown): v is SavedFeedsPref;
export declare function validateSavedFeedsPref(v: unknown): ValidationResult;
export interface PersonalDetailsPref {
    birthDate?: string;
    [k: string]: unknown;
}
export declare function isPersonalDetailsPref(v: unknown): v is PersonalDetailsPref;
export declare function validatePersonalDetailsPref(v: unknown): ValidationResult;
export interface FeedViewPref {
    feed: string;
    hideReplies?: boolean;
    hideRepliesByUnfollowed?: boolean;
    hideRepliesByLikeCount?: number;
    hideReposts?: boolean;
    hideQuotePosts?: boolean;
    [k: string]: unknown;
}
export declare function isFeedViewPref(v: unknown): v is FeedViewPref;
export declare function validateFeedViewPref(v: unknown): ValidationResult;
export interface ThreadViewPref {
    sort?: 'oldest' | 'newest' | 'most-likes' | 'random' | (string & {});
    prioritizeFollowedUsers?: boolean;
    [k: string]: unknown;
}
export declare function isThreadViewPref(v: unknown): v is ThreadViewPref;
export declare function validateThreadViewPref(v: unknown): ValidationResult;
